extends Node
class_name Выбор_цели
var стрелка = load("res://Сцены/стрелкапуть.tscn")
var актор
var цель
var СТРЕЛА
var метод
var тип_таргета = {}
var текущий_таргет = {}
signal выбор_цели(цель)
enum Характеристики {мана, здоровье, время, атака}


func создание():
	
	CardManager.выбор_цели = true
	СТРЕЛА = стрелка.instantiate()
	СТРЕЛА.актор = актор
	актор.get_tree().current_scene.add_child(СТРЕЛА)
	СТРЕЛА.global_position = Vector3(0,0,0)
	СТРЕЛА.готовность()
	
func _input(event):
	if event.is_action_pressed("ПКМ"):
		окончание()
	if event.is_action_pressed("ЛКМ"):
		проверка_цели()


func проверка_цели():
	if СТРЕЛА.цель != null:
		var условие_таргета = тип_таргета
		if тип_таргета.has("blacklist"):
			условие_таргета.erase("blacklist")
			if !тип_таргета["blacklist"].find(СТРЕЛА.цель):
				проверка_условий()
		else:
			проверка_условий()

		if условие_таргета == текущий_таргет:
			выбор_цели.emit(СТРЕЛА.цель)
			окончание()
func проверка_условий():
	for условие in тип_таргета:
		match условие:
			"type":
				if СТРЕЛА.цель.has_meta("type"):
					текущий_таргет["type"] = СТРЕЛА.цель.get_meta("type")
				else: return
			"принадлежность":
				текущий_таргет["принадлежность"] = СТРЕЛА.цель.принадлежность
			"значение_характеристики":
				var команда = тип_таргета["значение_характеристики"]
				команда = команда.split(" ", false)
				var характеристика = команда[0]
				match характеристика:
					"Атака":
						характеристика = СТРЕЛА.цель.Атака
					"Здоровье":
						характеристика = СТРЕЛА.цель.Здоровье
					"Стоимость":
						характеристика = СТРЕЛА.цель.Стоимость
					"Возраст":
						характеристика = СТРЕЛА.цель.Возраст
				var операция = команда[1]
				var значение = int(команда[2])
				if сравнение(характеристика, значение, операция):
					текущий_таргет["значение_характеристики"] = str(характеристика," ",операция, " ", значение)


func окончание():
	СТРЕЛА.queue_free()
	CardManager.выбор_цели = false
	queue_free()

static func сравнение(a: int = 0, b: int = 0, операция: String = "=") -> bool:
	match операция:
		">":
			return a > b
		"<":
			return a < b
		"=":
			return a == b
	return false
